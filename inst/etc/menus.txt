#type	menu/item	operation/parent	label	command/menu	activation	install?

# =============================================================================
menu	BioStat_menu	topMenu	 ""	""	""	""
item	topMenu	cascade	"BioStat'18"	BioStat_menu	""	""


# ==============================================================================
# ---- Data menu -------------------------------------------------------------

menu	bs_data_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Data"	bs_data_menu	""	""

# ---- Create data -----------------------------------------------------------
item	bs_data_menu	command	"Create a new dataset"	window_dataset_new_rcmdr	""	"" # from Rcmdr

# ---- Join/Bind datasets ---------------------------------------------------------
item	bs_data_menu	separator	""	""	""	""
item	bs_data_menu	command	"Join two datasets"	window_dataset_join	"dataSetsP(2)"	"packageAvailable('dplyr')"
item	bs_data_menu	command	"Bind rows of two datasets"	window_dataset_bind_rows	"dataSetsP(2)"	"packageAvailable('dplyr')"
item	bs_data_menu	command	"Bind columns of two datasets"	window_dataset_bind_cols	"dataSetsP(2)"	"packageAvailable('dplyr')"

# item	bs_data_menu	command	"Bind rows/columns of two datasets"	window_dataset_bind	"dataSetsP(2)"	"packageAvailable('dplyr')"

# item	bs_data_menu	separator	""	""	""	""
# item	bs_data_menu	command	"[!] Pander: print object for report"	window_pander	"activeDataSetP() && objects_in_env_P(n = 1)"	"packageAvailable('pander')"

# ~~~~ Convert to data.freme ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# item	bs_data_menu	separator	""	""	""	""
# item	bs_data_menu	command	"[!] Convert `table` to `data.frame`"	window_table_to_df	"FALSE"	""

# ~~~~ Data Import Menu ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
item	bs_data_menu	separator	""	""	""	""
item	bs_data_menu	command	"Import R data file (.Rds)"	window_import_rds	""	""

# menu	import_menu	bs_data_menu	""	""	""	""
# item	bs_data_menu	cascade	"Import / Load data"	import_menu	""	""



# ==============================================================================
# ---- Active dataset ---------------------------------------------------------

menu	bs_active_ds_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Active dataset"	bs_active_ds_menu	""	""

item	bs_active_ds_menu	command	"Refresh active dataset"	command_dataset_refresh	"activeDataSetP()"	""

# ---- Overview of the dataset's -------------------------------------------------

item	bs_active_ds_menu	separator	""	""	""	""
item	bs_active_ds_menu	command	"Glimpse: structure of dataset"	command_glimpse	"activeDataSetP()"	""
item	bs_active_ds_menu	command	"Number of rows and columns"	command_dataset_dim	"activeDataSetP()"	""
item	bs_active_ds_menu	command	"Print top and bottom rows"	summary_head_tail	"activeDataSetP()"	""
# item	bs_active_ds_menu	command	"Print top rows only"	summary_head	"activeDataSetP()"	""
# item	bs_active_ds_menu	command	"Print bottom rows only"	summary_tail	"activeDataSetP()"	""
item	bs_active_ds_menu	command	"Print whole dataset"	command_dataset_print	"activeDataSetP()"	""
item	bs_active_ds_menu	command	"View: show dataset in a separate window"	command_dataset_view	"activeDataSetP()"	""

item	bs_active_ds_menu	separator	""	""	""	""
item	bs_active_ds_menu	command	"Pander: print dataset as Markdown table"	window_dataset_pander	"activeDataSetP()"	"packageAvailable('pander')"


# ---- Manage dataset's class -------------------------------------------------

item	bs_active_ds_menu	separator ""	""	""	""

item	bs_active_ds_menu	command	"Show class"	command_dataset_class	"activeDataSetP()"	""
item	bs_active_ds_menu	command	"Convert to `data.frame`"	command_dataset_as_df	"activeDataSetP() && !first_class_is_dataframeP()"	""
item	bs_active_ds_menu	command	"Convert to tibble (`tbl_df`)"	command_dataset_as_tibble	"activeDataSetP() && !first_class_isP('tbl_df')"	"packageAvailable('tibble')"
item	bs_active_ds_menu	command	"Convert to `data.table`"	command_dataset_as_dt	"activeDataSetP() && !first_class_isP('data.table')"	"packageAvailable('data.table')"


# ~~~ Rename, copy ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

item	bs_active_ds_menu	separator ""	""	""	""
item	bs_active_ds_menu	command	"Rename active dataset"	window_dataset_rename	"activeDataSetP()"	""
item	bs_active_ds_menu	command	"Make a copy of active dataset"	window_dataset_copy	"activeDataSetP()"	""
item	bs_active_ds_menu	command	"Delete active dataset"	window_dataset_delete	"activeDataSetP()"	""


# ~~~~ Data Export Menu ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

item	bs_active_ds_menu	separator	""	""	""	""

menu	bs_export_menu	bs_active_ds_menu	""	""	""	""
item	bs_active_ds_menu	cascade	"Export / Save"	bs_export_menu	"activeDataSetP()"	""

item	bs_export_menu	command	"Save as R data file (.Rds)"	window_export_as_rds	"activeDataSetP()"	""
item	bs_export_menu	command	"[!] Save as text file (.txt, .csv, .dat)"	window_export_as_textfile	"FALSE & activeDataSetP()"	""
item	bs_export_menu	command	"[!] Save as Excel file (.xls, .xlsx)"	window_export_as_excel	"FALSE & activeDataSetP()"	""

# ==============================================================================
# ---- Manage observations / rows ---------------------------------------------

menu	bs_rows_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Rows"	bs_rows_menu	""	""

item	bs_rows_menu	command	"[!] Arrange: sort rows"	window_rows_arrange	"FALSE"	""
item	bs_rows_menu	command	"[!] Filter: select rows that match conditions"	window_rows_filter	"FALSE"	""
item	bs_rows_menu	command	"[!] Slice: select/remove rows by position"	window_rows_slice	"FALSE"	""
item	bs_rows_menu	separator	""	""	""	""
item	bs_rows_menu	command	"[!] Remove empty rows"	function_not_implemented	"FALSE"	""
item	bs_rows_menu	command	"[!] Remove rows with duplicated values"	function_not_implemented	"FALSE"	""
item	bs_rows_menu	command	"[!] Remove rows with missing values"	function_not_implemented	"FALSE"	""
item	bs_rows_menu	command	"[!] Fill missing values with..."	function_not_implemented	"FALSE"	""

item	bs_rows_menu	separator	""	""	""	""
item	bs_rows_menu	command	"Print row names"	command_rownames	"activeDataSetP()"	""
item	bs_rows_menu	command	"[!] Move row names to column"	command_rownames_to_col	"activeDataSetP()"	""
item	bs_rows_menu	command	"[!] Move column values to row names"	command_col_to_rownames	"activeDataSetP()"	""
item	bs_rows_menu	command	"[!] Add column with row numbers"	command_rowid_to_col	"activeDataSetP()"	""
# Remove row names and Add row numbers to column
#
#
#item	bs_rows_menu	separator	""	""	""	""
#item	bs_rows_menu	command	"Make random subset of rows"	window_rows_...	"activeDataSetP()"	""
#item	bs_rows_menu	separator	""	""	""	""


# ==============================================================================
# ---- Manage variables / columns ---------------------------------------------

menu	bs_varible_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Variables (columns)"	bs_varible_menu	""	""

item	bs_varible_menu	command	"Print variable (column) names"	command_colnames	"activeDataSetP()"	""
item	bs_varible_menu	command	"[!] Rename variables"	function_not_implemented	"FALSE"	"packageAvailable('dplyr')"
# item	bs_varible_menu	command	"Change variable (column) names"	window_change_colnames	"activeDataSetP()"	""


item	bs_varible_menu	separator	""	""	""	""
item	bs_varible_menu	command	"[!] Select, remove, reorder variables"	function_not_implemented	"FALSE"	"packageAvailable('dplyr')"
item	bs_varible_menu	command	"Mutate: compute a variable"	window_variable_mutate0	"activeDataSetP()"	"packageAvailable('dplyr')"
item	bs_varible_menu	command	"Recode variable values"	window_variable_recode	"activeDataSetP()"	"packageAvailable('dplyr')"

# item	bs_varible_menu	separator	""	""	""	""


item	bs_varible_menu	separator	""	""	""	""

item	bs_varible_menu	command	"Gather columns into long format dataset"	window_variable_gather	"activeDataSetP()"	"packageAvailable('tidyr')"
item	bs_varible_menu	command	"[!] Spread columns into wide format dataset"	function_not_implemented	"FALSE & activeDataSetP()"	"packageAvailable('tidyr')"#Spread a key-value pair across multiple columns
item	bs_varible_menu	command	"[!] Separate one column into multiple columns"	function_not_implemented	"FALSE & activeDataSetP()"	"packageAvailable('tidyr')"
item	bs_varible_menu	command	"[!] Unite multiple columns into one column"	function_not_implemented	"FALSE & activeDataSetP()"	"packageAvailable('tidyr')"

item	bs_varible_menu	separator	""	""	""	""


# Text variables -------------------------------------------------------------

menu	bs_var_text_menu	bs_varible_menu	""	""	""	""
item	bs_varible_menu	cascade	"Text variables (character, strings)"	bs_var_text_menu	"activeDataSetP()"	""
item	bs_var_text_menu	command	"Convert all text variables into factors"	command_all_chr_to_fctr	"characterP()"	"packageAvailable('tidyverse')"
item	bs_var_text_menu	command	"Convert text variables into ..."	window_chr_convert	"characterP()"	"packageAvailable('tidyverse')"



#
# item	bs_var_text_menu	command	"Convert strings into numeric, factor, logical, etc. "	window_chr_convert	"characterP()"	"packageAvailable('tidyverse')"
# item	bs_var_text_menu	command	"Convert all strings into factors"	command_all_chr_to_fctr	"characterP()"	"packageAvailable('tidyverse')"
# item	bs_var_text_menu	command	"[!] Convert string to factor"	function_not_implemented	"characterP()"	""
# item	bs_var_text_menu	command	"[!] Convert string to number"	function_not_implemented	"characterP()"	""
# item	bs_var_text_menu	command	"[!] Convert string to integer"	function_not_implemented	"characterP()"	""
# item	bs_var_text_menu	command	"[!] Convert string to logical"	function_not_implemented	"characterP()"	""
# item	bs_var_text_menu	command	"[!] Convert string to date"	function_not_implemented	"characterP()"	""
# item	bs_var_text_menu	command	"[!] Convert string to time"	function_not_implemented	"characterP()"	""
# item	bs_var_text_menu	command	"[!] Convert string to date-time"	function_not_implemented	"characterP()"	""


# # Numeric variables --------------------------------------------------
menu	bs_var_num_menu	bs_varible_menu	""	""	""	""

item	bs_varible_menu	cascade	"Numeric variables"	bs_var_num_menu	"activeDataSetP()"	""

item	bs_var_num_menu	command	"Log transformation"	window_log_transform	"numericP()"	""
item	bs_var_num_menu	command	"Z transformation / Standardization"	window_z_transform	"numericP()"	""

item	bs_var_num_menu	separator	""	""	""	""
item	bs_var_num_menu	command	"[!] Bin/Categorize numeric variable"	function_not_implemented	"FALSE & numericP()"	"" # including `cut`, `ifelse`,
item	bs_var_num_menu	command	"[!] Convert numeric variable into..."	function_not_implemented	"FALSE & numericP()"	"" # Character, factors, logical
item	bs_var_num_menu	command	"[!] Format numeric values for report"	function_not_implemented	"FALSE & numericP()"	"" # Format and convert to text


# Factor variables --------------------------------------------------
menu	bs_var_fct_menu	bs_varible_menu	""	""	""	""
item	bs_varible_menu	cascade	"Factors (categorical variables)"	bs_var_fct_menu	"activeDataSetP()"	""

item	bs_var_fct_menu	command	"[!] Add levels"	function_not_implemented	"FALSE & factorsP()" ""
# Collapse levels:
#    Collapse levels manually
#    Collapse least/most common levels into "other"
#    Replace levels with "other"
item	bs_var_fct_menu	command	'[!] Collapse/Merge levels'	function_not_implemented	"FALSE & factorsP()"	""
item	bs_var_fct_menu	command	"[!] Drop unused levels"	function_not_implemented	"FALSE & factorsP()"	""
# item	bs_var_fct_menu	command	"[!] Remove levels"	function_not_implemented	"FALSE & factorsP()"	""
item	bs_var_fct_menu	command	"[!] Rename levels"	function_not_implemented	"FALSE & factorsP()"	""
# Reorder factor levels automatically:
#     Reorder by sorting along another variable: variable name; summary function, .desc = FALSE
#     Reorder in frequency         : ordered = NA, TRUE, FALSE
#     Reorder in first appearance  : ordered = NA, TRUE, FALSE
#     Reverse levels
#     Shift levels to left wrapping around at end
#     Shift levels to right wrapping around at end
#
#     [checkbox:] Reverse the result
#
item	bs_var_fct_menu	command	"[!] Reorder levels automatically"	function_not_implemented	"FALSE & factorsP()"	""
item	bs_var_fct_menu	command	"[!] Reorder levels by hand"	window_fct_reorder	"factorsP() & FALSE"	""

# item	bs_var_fct_menu	command	"[!] Reorder levels in frequency"	function_not_implemented	"FALSE & factorsP()"	""
# item	bs_var_fct_menu	command	"[!] Reverse levels"	function_not_implemented	"FALSE & factorsP()"	""

item	bs_var_fct_menu	separator	""	""	""	""
item	bs_var_fct_menu	command	"[!] Convert missing values into explicit level"	function_not_implemented	"FALSE & factorsP()"	""
item	bs_var_fct_menu	separator	""	""	""	""
item	bs_var_fct_menu	command	"[!] Convert factor into..."	function_not_implemented	"FALSE & factorsP()"	""
item	bs_var_fct_menu	command	"[!] Switch between nominal and ordinal"	function_not_implemented	"FALSE & factorsP()"	""
item	bs_var_fct_menu	separator	""	""	""	""

# Logical variables --------------------------------------------------
# menu	bs_var_lgl_menu	bs_varible_menu	""	""	""	""
# item	bs_varible_menu	cascade	"Logical variables"	bs_var_lgl_menu	"logicalP()"	""


item	bs_varible_menu	command	"Convert logical variables into ..."	window_lgl_convert	"logicalP()"	"packageAvailable('rlang') && packageAvailable('forcats')"

#


# item	bs_var_lgl_menu	command	"Log transformation"	window_log_transform	"numericP()"	""
# item	bs_var_lgl_menu	command	"Z transformation / Standardization"	window_z_transform	"numericP()"	""


# ==============================================================================
# ---- Statistical summaries --------------------------------------------------

menu	bs_summary_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Summaries"	bs_summary_menu	""	""


item	bs_summary_menu	command	"Glimpse: structure of dataset"	command_glimpse	"activeDataSetP()"	""
item	bs_summary_menu	command	"Number of rows and columns"	command_dataset_dim	"activeDataSetP()"	""
item	bs_summary_menu	command	"Print top and bottom rows"	summary_head_tail	"activeDataSetP()"	""

item	bs_summary_menu	separator	""	""	""	""
item	bs_summary_menu	command	"Screen dataset for missing values"	summary_ds_screener	"activeDataSetP()"	""

item	bs_summary_menu	separator	""	""	""	""
item	bs_summary_menu	command	"Summarize all variables [stats::summary]"	command_summary	"activeDataSetP()"	""
item	bs_summary_menu	command	"Summarize all variables [Hmisc::describe]"	summary_Hmisc_describe	"activeDataSetP()"	""


item	bs_summary_menu	separator	""	""	""	""
# item	bs_summary_menu	command	"Summarize numerical variables [psych::describe]"	summary_psych_describe	"numericP()"	""
item	bs_summary_menu	command	"Summarize numerical variables by group"	window_do_summary	"numericP()"	""

# item	bs_summary_menu	command	"[!] Frequency table for continuous variables"	function_not_implemented	"FALSE & activeDataSetP()"	""
# descriptr::ds_freq_cont()


item	bs_summary_menu	separator	""	""	""	""
item	bs_summary_menu	command	"Frequency table for categorical variables"	window_summary_count	"factorsP()"	""
# df %>% dplyr::count(..., ...);
# df %>% with(table(..., ...)) %>% as.data.frame()

# item	bs_summary_menu	command	"[!] One-way tables"	function_not_implemented	"FALSE & factorsP()"	""

# item	bs_summary_menu	command	"[!] One-way table (for one variable)"	function_not_implemented	"FALSE & factorsP()"	""
# descriptr::ds_freq_table

# item	bs_summary_menu	command	"[!] One-way tables for all categorical variables"	function_not_implemented	"FALSE & factorsP()"	""
# descriptr::ds_oway_tables()

# item	bs_summary_menu	command	"[!] Two-way tables"	function_not_implemented	"FALSE & factorsP()"	""
# item	bs_summary_menu	command	"[!] Two-way table (for one variable)"	function_not_implemented	"FALSE & factorsP()"	""
# descriptr::ds_cross_table()


# item	bs_summary_menu	command	"[!] Two-way tables for all pairs of categorical variables"	function_not_implemented	"FALSE & factorsP()"	""
# descriptr::ds_tway_tables()


# item	bs_summary_menu	separator	""	""	""	""


# =============================================================================
# ---- Main plots -------------------------------------------------------------

menu	bs_plots_menu	BioStat_menu ""	""	""	""
item	BioStat_menu	cascade	"Plots"	bs_plots_menu	""	""

item	bs_plots_menu	command	"New window for plots"	open_new_plots_window	""	""

item	bs_plots_menu	separator	""	""	""	""
item	bs_plots_menu	command	"Interactive tool: easyPlot"	window_easyPlot	"variablesP(n = 2)"	""
item	bs_plots_menu	command	"Interactive tool: ggplot GUI"	window_ggplotgui	"variablesP()"	""
item	bs_plots_menu	command	"Interactive tool: ggedit"	window_ggedit	"class_ggplot_P()"	""
item	bs_plots_menu	command	"Interactive tool: ggThemeAssist (example)"	window_ggThemeAssist	"class_ggplot_P()"	""

item	bs_plots_menu	separator	""	""	""	""
item	bs_plots_menu	command	"Create a color palette"	window_colourPicker	""	""
item	bs_plots_menu	command	"Visualize color names & codes (example)"	window_show_colors	""	""

# item	bs_plots_menu	separator	""	""	""	""
# item	bs_plots_menu	command	"[!] Normal Q-Q plot (by groups)"	"function_not_implemented('window_qqplot_biostat')"	"numericP()"	""
#
# item	bs_plots_menu	separator	""	""	""	""
# item	bs_plots_menu	command	"[!] Histogram"	window_histogram	"nonFactorsP()"	""
# item	bs_plots_menu	command	"[!] Density plot"	window_density_plot	"nonFactorsP()"	""
#
# item	bs_plots_menu	separator	""	""	""	""
# item	bs_plots_menu	command	"[!] Dots (with error bars)"	window_plot_dot_err	"nonFactorsP()"	""
# item	bs_plots_menu	command	"[!] Columns (with error bars)"	window_plot_bar_err	"nonFactorsP()"	""

# ==============================================================================
# ---- Confidence intervals ---------------------------------------------------

menu	bs_ci_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Confidence intervals (CI)"	bs_ci_menu	""	""

item	bs_ci_menu	command	"[!] Mean CI (example)"	window_ci_mean	""	""
item	bs_ci_menu	command	"[!] Median CI (example)"	window_ci_median	""	""
item	bs_ci_menu	command	"[!] Binomial proportion CI (example)"	window_ci_prop_binom	""	""
item	bs_ci_menu	command	"[!] Multinomial proportion CI (example) "	window_ci_prop_multi	""	""
item	bs_ci_menu	command	"[!] CI for difference in means (example)"	window_ci_mean_diff	""	""
item	bs_ci_menu	separator	""	""	""	""
item	bs_ci_menu	command	"[!] Bootstrap confidence intervals (example)"	window_ci_boot	""	""

# ==============================================================================
# ---- Statistical tests ------------------------------------------------------

menu	bs_tests_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Tests"	bs_tests_menu	""	""

item	bs_tests_menu	command	"Test normality"	window_normality_test	"numericP()"	""
# item	bs_tests_menu	separator	""	""	""	""
# item	bs_tests_menu	command	"[!] ANOVA, Kruskal-Wallis, Median tests"	window_anova_kw_mood_tests	"numericP() & factorsP()"	""

# item	bs_tests_menu	cascade	"Central tendency tests"	bs_ceners_menu	""	""
# menu	bs_ceners_menu	bs_tests_menu	""	""	""	""
# item	bs_ceners_menu	command	"[!] Independent samples (eactly 2)"	function_not_implemented	"numericP() & twoLevelFactorsP()"	""
# item	bs_ceners_menu	command	"[!] Independent samples (2 or more)"	window_anova_kw_mood_tests	"numericP() & factorsP()"	""
# item	bs_ceners_menu	command	"[!] Independent samples (2 or more) [tmp]"	window_tmp	"numericP() & factorsP()"	""
# item	bs_tests_menu	command	"[!] "t tests, Wilcoxon, Mann-Whitney tests, Wald-Wolfowitz"	function_not_implemented	"numericP() & factorsP()"	""

# ==============================================================================
# ---- Models -----------------------------------------------------------------

menu	bs_models_menu	BioStat_menu	""	""	""	""
item	BioStat_menu	cascade	"Models"	bs_models_menu	""	""

item	bs_models_menu	command	"Show model's class"	command_get_model_class	"activeModelP()"	""
item	bs_models_menu	command	"Print model (basic results)"	command_model_print	"activeModelP()"	""
item	bs_models_menu	command	"Standardized regression coefficients"	command_std_lm_coeffs	"modelClassP('lm')"	""


# ==============================================================================
# ---- Distributions menu -------------------------------------------------------------

# menu	bs_distr_menu	BioStat_menu	""	""	""	""
# item	BioStat_menu	cascade	"Distributions"	bs_distr_menu	""	""
#
# item	bs_distr_menu	command	"Interactive tool to explore distributions"	window_distributions_descriptr	""	"packageAvailable('descriptr')" # from Rcmdr
#

# ==============================================================================
# ---- Settings ---------------------------------------------------------------

menu	bs_settings_menu	BioStat_menu ""	""	""	""
item	BioStat_menu	cascade	"Settings"	bs_settings_menu	""	""

item	bs_settings_menu	command	"Show working directory" command_getwd ""	""
item	bs_settings_menu	separator	""	""	""	""


item	bs_settings_menu	command	"Session information [devtools]"	command_session_info_devtools	""	""
item	bs_settings_menu	command	"Session information [utils]"	command_session_info_utils	""	""

item	bs_settings_menu	separator	""	""	""	""

menu	bs_locale_menu	bs_settings_menu	""	""	""	""
item	bs_settings_menu	cascade	"Locale"	bs_locale_menu	""	""

item	bs_locale_menu	command	"Show current locale"	command_get_locale	""	""
item	bs_locale_menu	separator	""	""	""	""
item	bs_locale_menu	command	"Set locale to Lithuanian"	command_set_locale_lt	""	""
item	bs_locale_menu	command	"Set locale to English"	command_set_locale_en	""	""
item	bs_locale_menu	command	"Set locale to Russian"	command_set_locale_ru	""	""
item	bs_locale_menu	command	"Set locale to system's default"	command_set_locale_default	""	""


# ==============================================================================
# ---- Settings ---------------------------------------------------------------

menu	bs_about_menu	BioStat_menu ""	""	""	""
item	BioStat_menu	cascade	"About"	bs_about_menu	""	""

item	bs_about_menu	command 'About package "RcmdrPlugin.biostat"'	window_about_package	""	""

# =============================================================================
